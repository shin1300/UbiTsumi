name: PR Checks

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review, labeled, unlabeled]

permissions:
  contents: read
  pull-requests: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR metadata and policy
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              core.setFailed('No pull_request in context');
              return;
            }

            const labels = (pr.labels || []).map(l => l.name);
            const hasType = labels.some(n => n.startsWith('type:'));
            const hasPriority = labels.some(n => n.startsWith('priority:'));
            const ms = pr.milestone;
            const base = pr.base.ref;
            const head = pr.head.ref;

            let errors = [];
            // 表記は好みで統一（type: / type:* どちらでも可）
            if (!hasType) errors.push('Missing label: type:');
            if (!hasPriority) errors.push('Missing label: priority:');
            if (!ms) errors.push('Missing milestone');

            // Enforce branching policy
            if (base === 'main') {
              if (!(head === 'develop' || head.startsWith('release/'))) {
                errors.push('Only develop or release/* branches may target main');
              }
            }
            if (base === 'develop') {
              if (head === 'develop' || head === 'main') {
                errors.push('Do not merge develop/main directly into develop');
              }
            }

            if (errors.length) {
              core.setFailed(errors.join('\n'));
            } else {
              console.log('PR checks passed');
            }
