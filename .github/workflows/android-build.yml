name: Android Build

on:
  push:
    branches: [develop, main]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      unity: ${{ steps.parse.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - id: parse
        run: |
          v=$(grep '^m_EditorVersion:' ProjectSettings/ProjectVersion.txt | awk '{print $2}')
          echo "version=$v" >> "$GITHUB_OUTPUT"

  build-android:
    if: ${{ secrets.UNITY_LICENSE != '' }}
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build (Android)
        uses: game-ci/unity-builder@v4
        with:
          unityVersion: ${{ needs.get-version.outputs.unity }}
          targetPlatform: Android
          allowDirtyBuild: true
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: Android-${{ github.ref_name }}-${{ github.sha }}
          path: build/Android/**/*.apk

  release:
    if: ${{ github.ref == 'refs/heads/main' && secrets.UNITY_LICENSE != '' }}
    needs: build-android
    runs-on: ubuntu-latest
    steps:
      - name: Create draft release with APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ github.sha }}
          name: Android build ${{ github.sha }}
          draft: true
          files: build/Android/**/*.apk

